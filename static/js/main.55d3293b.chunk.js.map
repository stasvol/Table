{"version":3,"sources":["reducers/set_data.js","logo.svg","reducers/users.js","Api/api.js","pagination/pagination.js","components/data_table.js","components/testTable.js","pagination/pagination1.js","components/drag.js","App.js","reportWebVitals.js","reducers/set_table.js","store/store.js","index.js"],"names":["SET_DATA","initialState","data","ADD_USERS","users","URL","asyncDataThunk","dispatch","fetch","then","response","ok","Error","statusText","json","type","payload","setDataAC","catch","err","console","error","PaginationTable","numberPage","props","pagesCount","Math","ceil","financials","length","pages","pageSize","useState","currentPage","setCurrentPage","handleClick","e","index","preventDefault","mappedData","map","i","fiscalDate","accountsPayable","cashChange","cashFlow","order","id","Date","getTime","random","setData","currentData","setCurrentData","dragEndHandler","currentTarget","style","boxShadow","dropHandler","row","log","d","Table","bordered","hover","className","head","slice","sort","a","b","active","onDragStart","dragStartHandler","onDragLeave","onDragEnd","onDragOver","dragOverHandler","onDrop","draggable","scope","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","onClick","href","previous","Array","page","next","last","DataTable","children","React","PureComponent","applyDrag","arr","dragResult","removedIndex","addedIndex","result","itemToAdd","splice","generateItems","count","creator","push","Component","App","useDispatch","useSelector","state","useEffect","user","color","fontSize","border","padding","margin","width","marginLeft","name","username","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TABLE","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55d3293b.chunk.js","sourcesContent":["export const SET_DATA = 'SET_DATA'\r\nconst DATA_FETCH ='DATA_FETCH'\r\n\r\nconst initialState ={\r\n    data:[],\r\n}\r\n\r\n\r\nexport const setDataRedux = (state=initialState,action) =>{\r\n\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n\r\n            return{\r\n\r\n                data: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setDataAC = (data) =>({type:SET_DATA,payload:data})\r\n// export const dataFetch = (data) =>({type:DATA_FETCH,data})\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADD_USERS = 'ADD_USERS'\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\nexport const usersReduc =(state=initialState,action)=>{\r\n\r\n         switch (action.type) {\r\n\r\n             case ADD_USERS:\r\n                 return{\r\n                     users:action.payload\r\n                 }\r\n             default:\r\n                 return state\r\n         }\r\n}\r\nexport const addUsersAC=(payload)=>({type:ADD_USERS,payload})","import * as axios from \"axios\";\r\nimport {addUsersAC} from \"../reducers/users\";\r\nimport {setDataAC} from \"../reducers/set_data\";\r\n\r\nconst STOCKS_COUNT = 12;\r\nconst BASE_PATH = 'https://sandbox.iexapis.com/stable';\r\nconst ENDPOINT_PATH = '/stock/AAPL/financials/';\r\nconst QUERY_PARAM = 'token=';\r\n// const API_KEY = 'Tpk_d232dd87ed34407dacc92eee1edbf407';\r\nconst API_KEY = 'Tpk_feb589a8931a45fead76ff039894d942';\r\nexport const URL = `${BASE_PATH}${ENDPOINT_PATH}${STOCKS_COUNT}?${QUERY_PARAM}${API_KEY}`;\r\n\r\n\r\n// const instance = axios.create({\r\n//     withCredentials: true,\r\n//     baseURL: 'https://sandbox.iexapis.com/stable/stock/AAPL/financials/',\r\n//     headers: {\r\n//         \"API-KEY\": \"pk_265e4bc4d9974eb59476ac1aca8b59dc\"\r\n//     }\r\n// });\r\n// export const loadData(){\r\n//\r\n//          return  instance.get(`token=12`).then(response=> {\r\n//              return response.data\r\n//\r\n//       }\r\n//    }\r\n\r\n// const  axios  =  require ( 'axios' ) ;\r\n\r\n// axios.get ( `${BASE_PATH}${ENDPOINT_PATH}${STOCKS_COUNT}?${QUERY_PARAM}${API_KEY}`)\r\n//     .then ( function  ( response )  {\r\n//\r\n//         console.log ( response ) ;\r\n//     })\r\n//     .catch ( function  ( error )  {\r\n//\r\n//         console.log ( error ) ;\r\n//     })\r\n//     .then ( function  ( )  {\r\n//         // выполняется всегда\r\n//     }) ;\r\n//\r\n// // const axios = getData()\r\n// async function getData() {\r\n//     try {\r\n//         const response = await axios.get(`${BASE_PATH}${ENDPOINT_PATH}${STOCKS_COUNT}?${QUERY_PARAM}${API_KEY}`);\r\n//         console.log(response);\r\n//     } catch (error) {\r\n//         console.error(error);\r\n//     }\r\n// }\r\n// console.log(getData)\r\n\r\nexport const asyncDataThunk = (data) => (dispatch) => {\r\n\r\n    return fetch(URL)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => dispatch(setDataAC(data)))\r\n\r\n        .catch(err => console.error(err))\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Pagination, PaginationItem, PaginationLink, Table} from 'reactstrap';\r\nimport style from \"../module.css/module.css\";\r\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst PaginationTable = ({numberPage=1,...props}) => {\r\n\r\n    // props.pageSize = 10;\r\n\r\n    // this.state = {\r\n    //     currentPage: 0\r\n    // };\r\n\r\n    const pagesCount = Math.ceil(props.data.financials?.length / props.pages.pageSize)\r\n\r\n    // let addPages = []\r\n    //\r\n    // for (let i=0; i<pagesCount.length; i++ ){\r\n    //     addPages.push(i)\r\n    // }\r\n\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    // ((currentPage - 1) * props.pages.pageSize) + (index + 1)\r\n\r\n    const handleClick = (e, index) => {\r\n\r\n        e.preventDefault();\r\n\r\n        setCurrentPage(index)\r\n    }\r\n\r\n\r\n    const mappedData = props?.data?.financials?.map(({\r\n         fiscalDate,\r\n         accountsPayable,\r\n         cashChange,\r\n         cashFlow\r\n     }, i) => ({\r\n        // index: i,\r\n        order: i+1,\r\n        id: Math.ceil(new Date().getTime() * Math.random()*100 ),\r\n        fiscalDate,\r\n        accountsPayable,\r\n        cashChange,\r\n        cashFlow,\r\n    }));\r\n\r\n    const [data, setData] = useState(mappedData)\r\n    const [currentData,setCurrentData] = useState(null)\r\n\r\n\r\n    // console.log(currentPage)\r\n\r\n    // const pagesCount = Math.ceil(props.pages.countData / props.pages.pageDataCount)  // к-ть стор.= заг. к-ть даних / поділ. на к-ть даних на стор.\r\n    // const pagesAdd = [];\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pagesAdd.push(i)\r\n    // }\r\n    //\r\n    //     const pagesPartCount = Math.ceil(pagesCount / pageButtonCount) // заг. к-ть стор. поділити к-ть кноп. на стор.\r\n    //     const [pageNumber, setPageNumber] = useState(1)     // номер стор. i + f\r\n    //     const leftBorder = (pageNumber - 1) * pageButtonCount + 1       // ліва границя = номер стор. помнож. на к-ть кноп. на стор.\r\n    //     const rightBorder = pageNumber * pageButtonCount\r\n\r\n\r\n    const dragStartHandler = (e, data) => {\r\n\r\n        setCurrentData(data)\r\n        console.log('drag', data)\r\n    }\r\n\r\n    const dragEndHandler = (e) => {\r\n        // e.currentTarget.style.background = 'white'\r\n        e.currentTarget.style.boxShadow = 'none'\r\n    }\r\n\r\n    const dragOverHandler = (e) => {\r\n\r\n        e.preventDefault()\r\n    // e.currentTarget.style.background = '#d5f5f5'\r\n    e.currentTarget.style.boxShadow = '0  0 10px 7px rgba(0, 0, 0, .2)'\r\n        // '.2em .2em #d5f5f5, -0 .2em 1em .6em #d5f5f5'\r\n        // '-6px   -6px    #d4eefa'\r\n    }\r\n\r\n    const dropHandler = (e, row) => {\r\n        e.preventDefault()\r\n\r\n        console.log('drop', row)\r\n\r\n        setData(data.map((d, index) => {\r\n\r\n                if (d.id === row.id) {\r\n                    return {...d, order:currentData.order }\r\n                }\r\n\r\n                if (d.id === currentData.id) {\r\n                    return {...d, order: row.order}\r\n                }\r\n                return d\r\n            })\r\n        );\r\n        // e.currentTarget.style.background = 'white'\r\n        e.currentTarget.style.boxShadow = 'none'\r\n    }\r\n    const sortData = (a, b) => {\r\n\r\n        if (a.order > b.order) {\r\n            return  1\r\n        } else {\r\n            return -1\r\n        }\r\n\r\n        // return 0;\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <Table bordered hover >\r\n\r\n\r\n                <thead className={style.head}>\r\n\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Fiscal Date</th>\r\n                    <th>Accounts Payable</th>\r\n                    <th>Cash Change</th>\r\n                    <th>Cash Flow</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                {\r\n                    // props.data.financials && props.data.financials.length !== 0 &&\r\n                 data\r\n                    .slice(\r\n\r\n                        currentPage * props.pages.pageSize,\r\n                        (currentPage + 1) * props.pages.pageSize,\r\n                        // (currentPage-1) *props.pages.pageSize + 1,\r\n                    )\r\n\r\n                    .sort(sortData).map((data, i) =>\r\n\r\n                    <tbody key={i} className={style.active}\r\n\r\n                           onDragStart={(e) => dragStartHandler(e, data)}\r\n                           onDragLeave={(e) => dragEndHandler(e)}\r\n                           onDragEnd={(e) => dragEndHandler(e)}\r\n                           onDragOver={(e) => dragOverHandler(e)}\r\n                           onDrop={(e) => dropHandler(e, data)}\r\n\r\n                           draggable={true}>\r\n\r\n                    <tr >\r\n\r\n                        <th scope=\"row\">{((currentPage) * props.pages.pageSize) + (i + 1)}</th>\r\n                        <td>{data.fiscalDate}</td>\r\n                        <td>{data.accountsPayable} </td>\r\n                        <td>{data.cashChange} </td>\r\n                        <td>{data.cashFlow} </td>\r\n\r\n                    </tr>\r\n\r\n                    </tbody>\r\n                )\r\n                }\r\n            </Table>\r\n            <Pagination aria-label=\"Page navigation example\">\r\n\r\n                <PaginationItem disabled={currentPage <= 0}>\r\n                    <PaginationLink first onClick={e => handleClick(e, currentPage <= 0)} href=\"#\"/>\r\n                </PaginationItem>\r\n                <PaginationItem disabled={currentPage <= 0}>\r\n                    <PaginationLink previous onClick={e => handleClick(e, currentPage - 1)} href=\"#\"/>\r\n                </PaginationItem>\r\n\r\n                {\r\n                    // props.data && props.data.length &&\r\n                [...Array(pagesCount)].map((page, i) =>\r\n\r\n                    <PaginationItem active={i === currentPage} key={i}>\r\n                        <PaginationLink onClick={e => handleClick(e, i)} href=\"#\">\r\n                            {i + 1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                )\r\n                }\r\n                <PaginationItem disabled={currentPage >= pagesCount - 1}>\r\n                    <PaginationLink onClick={e => handleClick(e, currentPage + 1)} next href=\"#\"/>\r\n                </PaginationItem>\r\n\r\n                {/*<PaginationItem>*/}\r\n                {/*    <PaginationLink next />*/}\r\n                {/*</PaginationItem>*/}\r\n                <PaginationItem disabled={currentPage >= pagesCount - 1}>\r\n                    <PaginationLink last onClick={e => handleClick(e, pagesCount - 1)} href=\"#\"/>\r\n                </PaginationItem>\r\n            </Pagination>\r\n\r\n            {/*{ props.data*/}\r\n\r\n            {/*    .slice(*/}\r\n            {/*        currentPage * props.pageSize,*/}\r\n            {/*        (currentPage + 1) * props.pageSize*/}\r\n            {/*    )*/}\r\n            {/*    .map((data, i) =>*/}\r\n            {/*        <div className=\"data-slice\" key={i}>*/}\r\n            {/*            {data}*/}\r\n            {/*        </div>*/}\r\n            {/*    )}*/}\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default PaginationTable;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { Table } from 'reactstrap';\r\nimport  style from './../module.css/module.css'\r\nimport PaginationTable from \"../pagination/pagination\";\r\n\r\n\r\n\r\nconst DataTable =({...props})=> {\r\n\r\n    return (\r\n            <div>\r\n\r\n                <h2>Symbol: AAPL </h2>\r\n                {/*{ props.data && props.data.length !==0 &&*/}\r\n                {/*props.data.financials.map((data,index)=> <div><span>EBITDA:{data.EBITDA}</span>*/}\r\n                {/*     <span>accountsPayable:{data.accountsPayable}</span>*/}\r\n                {/*     <span>capitalSurplus:{data.capitalSurplus}</span>*/}\r\n                {/*     <span>cashChange:{data.cashChange}</span>*/}\r\n                {/*     <span>cashChange:{data.cashChange}</span>*/}\r\n                {/*     <span>cashFlow:{data.cashFlow}</span>*/}\r\n                {/*     <span>currency:{data.currency}</span>*/}\r\n                {/*     <span>fiscalDate:{data.fiscalDate}</span>*/}\r\n\r\n                {/*    </div>*/}\r\n                {/*   )*/}\r\n                {/*}*/}\r\n\r\n            {/*<Table   bordered  hover >*/}\r\n\r\n            {/*    <thead>*/}\r\n            {/*    <tr>*/}\r\n            {/*        <th>#</th>*/}\r\n            {/*        <th >Fiscal Date</th>*/}\r\n            {/*        <th>Accounts Payable</th>*/}\r\n            {/*        <th>Cash Change</th>*/}\r\n            {/*        <th>Cash Flow</th>*/}\r\n            {/*    </tr>*/}\r\n            {/*    </thead>*/}\r\n\r\n            {/*    {*/}\r\n            {/*        props.data && props.data.length !== 0  &&*/}\r\n            {/*        (props.data.financials ).map((data, i) =>*/}\r\n\r\n            {/*               <tbody key={i} className={style.tab}>*/}\r\n            {/*                <tr>*/}\r\n            {/*                    <th scope=\"row\">{i + 1}</th>*/}\r\n            {/*                    <td>{data.fiscalDate}</td>*/}\r\n            {/*                    <td>{data.accountsPayable}</td>*/}\r\n            {/*                    <td>{data.cashChange}</td>*/}\r\n            {/*                    <td>{data.cashFlow}</td>*/}\r\n            {/*                </tr>*/}\r\n\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">2</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td>Thornton</td>*!/*/}\r\n            {/*                /!*    <td>@fat</td>*!/*/}\r\n            {/*                /!*    <td>@fat</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">3</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td>the Bird</td>*!/*/}\r\n            {/*                /!*    <td>@twitter</td>*!/*/}\r\n            {/*                /!*    <td>@twitter</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">4</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">5</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">6</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">7</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">8</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">9</th>*!/*/}\r\n            {/*                /!*    <td >{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n            {/*                /!*<tr>*!/*/}\r\n            {/*                /!*    <th scope=\"row\">10</th>*!/*/}\r\n            {/*                /!*    <td>{data.fiscalDate}</td>*!/*/}\r\n            {/*                /!*    <td> Bird</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*    <td>@vk</td>*!/*/}\r\n            {/*                /!*</tr>*!/*/}\r\n\r\n            {/*                </tbody>*/}\r\n            {/*        )*/}\r\n            {/*    }*/}\r\n\r\n            {/*</Table>*/}\r\n\r\n                {/*{props.data.financials && (*/}\r\n                    <PaginationTable pages={props.pages} data={props.data} {...props} children/>\r\n                {/*)}*/}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default DataTable","import React, {useState} from 'react';\r\nimport {Pagination, PaginationItem, PaginationLink, Table} from 'reactstrap';\r\n\r\nclass TestTable extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        // create data set of random length\r\n        this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(\r\n            (a, i) => \"Record \" + (i + 1)\r\n        );\r\n\r\n        this.pageSize = 50;\r\n        this.pagesCount = Math.ceil(this.dataSet.length / this.pageSize);\r\n\r\n        this.state = {\r\n            currentPage: 0\r\n        };\r\n\r\n    }\r\n\r\n    handleClick(e, index) {\r\n\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            currentPage: index\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentPage } = this.state;\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                <div className=\"pagination-wrapper\">\r\n\r\n                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                        <PaginationItem disabled={currentPage <= 0}>\r\n\r\n                            <PaginationLink\r\n                                onClick={e => this.handleClick(e, currentPage - 1)}\r\n                                previous\r\n                                href=\"#\"\r\n                            />\r\n\r\n                        </PaginationItem>\r\n\r\n                        {[...Array(this.pagesCount)].map((page, i) =>\r\n                            <PaginationItem active={i === currentPage} key={i}>\r\n                                <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">\r\n                                    {i + 1}\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n                        )}\r\n\r\n                        <PaginationItem disabled={currentPage >= this.pagesCount - 1}>\r\n\r\n                            <PaginationLink\r\n                                onClick={e => this.handleClick(e, currentPage + 1)}\r\n                                next\r\n                                href=\"#\"\r\n                            />\r\n\r\n                        </PaginationItem>\r\n\r\n                    </Pagination>\r\n\r\n                </div>\r\n\r\n                {this.dataSet\r\n                    .slice(\r\n                        currentPage * this.pageSize,\r\n                        (currentPage + 1) * this.pageSize\r\n                    )\r\n                    .map((data, i) =>\r\n                        <div className=\"data-slice\" key={i}>\r\n                            {data}\r\n                        </div>\r\n                    )}\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default TestTable","import React, {useState} from 'react';\r\nimport {Pagination, PaginationItem, PaginationLink, Table} from 'reactstrap';\r\nimport style from \"../module.css/module.css\";\r\n\r\n\r\nclass PaginationTable extends React.PureComponent {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        // create data set of random length\r\n        // this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(\r\n        //     (a, i) => \"Record \" + (i + 1)\r\n        // );\r\n\r\n        // this.pageSize = 2;\r\n\r\n           // if (this.props.data.financials && this.props.data.financials.length !== 0 ) {\r\n\r\n               this.pagesCount = Math.ceil(this.props.data.financials.length / this.props.pages.pageSize);\r\n           // }\r\n\r\n           this.state = {\r\n            currentPage: 0,\r\n            currentData: null,\r\n               data: this.mappedData\r\n        };\r\n    }\r\n\r\n    handleClick =(e, index)=> {\r\n\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            currentPage: index\r\n        });\r\n\r\n    }\r\n\r\n     mappedData = this.props?.data?.financials?.map(({\r\n\r\n       fiscalDate, accountsPayable, cashChange, cashFlow  }, i)  => ({\r\n\r\n        order: i+1,\r\n        id: Math.ceil(Math.random(new Date().getTime())*100 ),\r\n        fiscalDate,\r\n        accountsPayable,\r\n        cashChange,\r\n        cashFlow\r\n    }));\r\n\r\n\r\n    dragStartHandler=(e,data)=>{\r\n\r\n       this.setState({\r\n           currentData:data\r\n       })\r\n        console.log('drag', data)\r\n    }\r\n    dragLeaveHandler=(e)=>{\r\n        // e.target.style.background = 'white'\r\n    }\r\n   dragEndHandler=(e)=>{\r\n        // e.target.style.background = 'white'\r\n    }\r\n    dragOverHandler=(e)=>{\r\n        e.preventDefault()\r\n        // e.target.style.background = 'lightgray'\r\n    }\r\n     dropHandler=(e,card)=>{\r\n\r\n        e.preventDefault()\r\n         console.log('drop', card)\r\n\r\n         const newData = this.state.data.map(d =>{\r\n             if (d.id === card.id){\r\n                 return {...d,order:this.state.currentData.order}\r\n             }\r\n             if (d.id  === this.state.currentData.id){\r\n                 return {...d,order:card.order}\r\n             }\r\n             return d\r\n         });\r\n\r\n        this.setState({ data: newData});\r\n        // e.target.style.background = 'white'\r\n    }\r\n    sortData =(a,b)=>{\r\n\r\n        if (a.order > b.order) {\r\n            return 1\r\n        } else {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentPage } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                {/*<div className=\"pagination-wrapper\">*/}\r\n\r\n                    {/*<Pagination aria-label=\"Page navigation example\">*/}\r\n\r\n                    {/*    <PaginationItem disabled={currentPage <= 0}>*/}\r\n\r\n                    {/*        <PaginationLink*/}\r\n                    {/*            onClick={e => this.handleClick(e, currentPage - 1)}*/}\r\n                    {/*            previous*/}\r\n                    {/*            href=\"#\"*/}\r\n                    {/*        />*/}\r\n\r\n                    {/*    </PaginationItem>*/}\r\n\r\n                    {/*    {[...Array(this.pagesCount)].map((page, i) =>*/}\r\n                    {/*        <PaginationItem active={i === currentPage} key={i}>*/}\r\n                    {/*            <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">*/}\r\n                    {/*                {i + 1}*/}\r\n                    {/*            </PaginationLink>*/}\r\n                    {/*        </PaginationItem>*/}\r\n                    {/*    )}*/}\r\n\r\n                    {/*    <PaginationItem disabled={currentPage >= this.pagesCount - 1}>*/}\r\n\r\n                    {/*        <PaginationLink*/}\r\n                    {/*            onClick={e => this.handleClick(e, currentPage + 1)}*/}\r\n                    {/*            next*/}\r\n                    {/*            href=\"#\"*/}\r\n                    {/*        />*/}\r\n\r\n                    {/*    </PaginationItem>*/}\r\n\r\n                    {/*</Pagination>*/}\r\n\r\n                {/*</div>*/}\r\n\r\n                <Table   bordered  hover >\r\n\r\n\r\n                    <thead>\r\n\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Fiscal Date</th>\r\n                        <th>Accounts Payable</th>\r\n                        <th>Cash Change</th>\r\n                        <th>Cash Flow</th>\r\n                    </tr>\r\n\r\n                    </thead>\r\n\r\n                {this.props.data.financials  && this.props.data.financials.length !== 0  &&\r\n                    // (this.props.data.financials )\r\n                 this.state.data\r\n\r\n                    .slice(\r\n                        currentPage * this.props.pages.pageSize,\r\n                        (currentPage + 1) * this.props.pages.pageSize\r\n                    )\r\n\r\n                        .sort(this.sortData).map((data, i) =>\r\n\r\n                    <tbody key={i} className={style.tab}\r\n                           onDragStart={(e) =>this.dragStartHandler(e,data)}\r\n                           onDragLeave={(e)=>this.dragLeaveHandler(e)}\r\n                           onDragEnd={(e)=>this.dragEndHandler(e)}\r\n                           onDragOver={(e)=>this.dragOverHandler(e)}\r\n                           onDrop={(e)=>this.dropHandler(e,data)}\r\n                           draggable={true}>\r\n\r\n                    <tr>\r\n\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{data.fiscalDate}</td>\r\n                    <td>{data.accountsPayable}</td>\r\n                    <td>{data.cashChange}</td>\r\n                    <td>{data.cashFlow}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    )\r\n                }\r\n                </Table>\r\n\r\n                <Pagination aria-label=\"Page navigation example\">\r\n\r\n                    <PaginationItem disabled={currentPage <= 0}>\r\n                        <PaginationLink first onClick={e => this.handleClick(e, currentPage===0)}  />\r\n                    </PaginationItem>\r\n\r\n                    <PaginationItem disabled={currentPage <= 0}>\r\n\r\n                        <PaginationLink\r\n                            onClick={e => this.handleClick(e, currentPage - 1)}\r\n                            previous\r\n\r\n                        />\r\n                    </PaginationItem>\r\n\r\n                    { this.pagesCount &&\r\n                        [...Array(this.pagesCount)].map((page, i) =>\r\n                        <PaginationItem active={i === currentPage} key={i}>\r\n                            <PaginationLink onClick={e => this.handleClick(e, i)} >\r\n                                 {i+1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n\r\n                    <PaginationItem disabled={currentPage >= this.pagesCount  -1 }>\r\n                        <PaginationLink\r\n                            onClick={e => this.handleClick(e, currentPage  +1 )}\r\n                            next />\r\n                    </PaginationItem>\r\n                    <PaginationItem disabled={currentPage >= this.pagesCount-1}>\r\n                        <PaginationLink\r\n                            onClick={e => this.handleClick(e,   this.pagesCount -1)}\r\n                            last\r\n                        />\r\n                    </PaginationItem>\r\n\r\n                </Pagination>\r\n                    </>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default PaginationTable\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\n// import \"./styles.css\";\r\n\r\nexport const applyDrag = (arr, dragResult) => {\r\n    const { removedIndex, addedIndex, payload } = dragResult;\r\n    if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n    const result = [...arr];\r\n    let itemToAdd = payload;\r\n\r\n    if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n    }\r\n\r\n    if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const generateItems = (count, creator) => {\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n        result.push(creator(i));\r\n    }\r\n    return result;\r\n};\r\n\r\nclass Simple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: generateItems(10, index => {\r\n                return {\r\n                    id: index,\r\n                    data: \"Draggable\" + index\r\n                };\r\n            })\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"simple-page\">\r\n\r\n                    <Container\r\n                        onDrop={e =>\r\n                            this.setState({ items: applyDrag(this.state.items, e) })\r\n                        }\r\n                    >\r\n                        {this.state.items.map(p => {\r\n                            return (\r\n                                <Draggable key={p.id}>\r\n                                    <div className=\"draggable-item\">{p.data}</div>\r\n                                </Draggable>\r\n                            );\r\n                        })}\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Simple\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {Button} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {dataFetch, setDataAC} from \"./reducers/set_data\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {asyncThunk} from \"./asyncAction/asyncThunk\";\r\nimport {asyncDataThunk} from \"./Api/api\";\r\nimport DataTable from \"./components/data_table\";\r\nimport React, {useEffect} from \"react\";\r\nimport TestTable from \"./components/testTable\";\r\nimport PaginationTable from \"./pagination/pagination1\";\r\nimport Simple from \"./components/drag\";\r\n\r\n\r\n\r\n\r\nfunction App (props) {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.data.data)\r\n    const users = useSelector(state=>state.users)\r\n    const pages = useSelector(state=>state.pages)\r\n    // const dataFetch = dispatch(asyncDataThunk())\r\n    //  console.log(pages)\r\n\r\n    useEffect(() =>{\r\n           dispatch(asyncDataThunk())\r\n            // dataFetch(data)\r\n    },[])\r\n\r\n\r\n    return (\r\n    <div className=\"App\">\r\n\r\n\r\n        <div>\r\n            {/*<Button onClick={()=> dispatch(asyncThunk())} color=\"primary\">USERS</Button>{' '}*/}\r\n            {/*<Button onClick={()=> dispatch(asyncDataThunk())} color=\"secondary\">secondary</Button>{' '}*/}\r\n            {/*<Button color=\"success\">success</Button>{' '}*/}\r\n            {/*<Button color=\"info\">info</Button>{' '}*/}\r\n            {/*<Button color=\"warning\">warning</Button>{' '}*/}\r\n            {/*<Button color=\"danger\">danger</Button>{' '}*/}\r\n            {/*<Button color=\"link\">link</Button>*/}\r\n            {\r\n                  users.users.map(user=><div style={{color:\"slategray\",fontSize:\"1rem\",\r\n                      border:\"1px solid black\",padding:\"2px\",margin:5,width:250,marginLeft:50}}>\r\n                     <div key={user}>{user.name}</div>\r\n                     <div >{user.username}</div>\r\n                     <div >{user.email}</div>\r\n                      </div>\r\n                  )\r\n            }\r\n        </div>\r\n        {data.financials && pages && (\r\n            <DataTable data={data} pages={pages} {...props}/>\r\n        )}\r\n\r\n         {/*<PaginationTable/>*/}\r\n        {/*<TableTwo/>*/}\r\n       {/*<TestTable/>*/}\r\n       {/*<Simple/>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const SET_TABLE = 'SET_TABLE'\r\n\r\nconst initialState = {\r\n     pageSize: 10,\r\n     // currentPage: 0,\r\n    // countData:12,\r\n    // pageDataCount:10,\r\n    // tablePageCount: 0,\r\n\r\n}\r\n\r\nexport const setTableSize = (state=initialState,action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_TABLE:\r\n\r\n            return {\r\n                currentPage:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {combineReducers, createStore,applyMiddleware} from \"redux\";\r\nimport {setDataRedux} from \"../reducers/set_data\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport {usersReduc} from \"../reducers/users\";\r\nimport {setTableSize} from \"../reducers/set_table\";\r\n\r\nconst rootReducer = combineReducers({\r\n    data: setDataRedux,\r\n    users: usersReduc,\r\n    pages: setTableSize\r\n})\r\n\r\nexport const  store  = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n\r\n\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './store/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store} >\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}